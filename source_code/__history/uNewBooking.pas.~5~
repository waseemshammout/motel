unit uNewBooking;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants,
  System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, FireDAC.Stan.Intf, FireDAC.Stan.Option,
  FireDAC.Stan.Param, FireDAC.Stan.Error, FireDAC.DatS, FireDAC.Phys.Intf,
  FireDAC.DApt.Intf, FireDAC.Stan.Async, FireDAC.DApt, Data.DB,
  FireDAC.Comp.DataSet, FireDAC.Comp.Client, Vcl.StdCtrls, Vcl.DBCtrls,
  Vcl.Mask, Vcl.ExtCtrls, Vcl.ComCtrls, FireDAC.UI.Intf, FireDAC.Stan.Def,
  FireDAC.Stan.Pool, FireDAC.Phys, FireDAC.Phys.PG, FireDAC.Phys.PGDef,
  FireDAC.VCLUI.Wait;

type
  TfrmBooking = class(TForm)
    DataSource1: TDataSource;
    DTPcheckinDate: TDateTimePicker;
    DTPcheckoutDate: TDateTimePicker;
    Label1: TLabel;
    Label2: TLabel;
    Label3: TLabel;
    Label4: TLabel;
    edRatePerNight: TDBEdit;
    Label5: TLabel;
    cmbRoomNum: TComboBox;
    edSettledAmount: TDBEdit;
    LSettledAmount: TLabel;
    Label6: TLabel;
    Label7: TLabel;
    Label8: TLabel;
    DBNavigator1: TDBNavigator;
    edNights: TDBEdit;
    edTotalAmount: TDBEdit;
    Label9: TLabel;
    edBookingNo: TDBEdit;
    edCheckInDate: TDBEdit;
    edCheckOutDate: TDBEdit;
    Button1: TButton;
    procedure FormClose(Sender: TObject; var Action: TCloseAction);
    procedure DTPcheckinDateChange(Sender: TObject);
    procedure DTPcheckoutDateChange(Sender: TObject);
    procedure FormCreate(Sender: TObject);
    procedure Label4Click(Sender: TObject);
    procedure dsBookingsBeforePost(DataSet: TDataSet);
    procedure Button1Click(Sender: TObject);
  private
    { Private declarations }
  public
    { Public declarations }
    checkinDate, CheckoutDate: TDate;
    room_id: integer;
    nights: Extended;
  end;

var
  frmBooking: TfrmBooking;

implementation

{$R *.dfm}

uses uDataModule, uRooms, uMain;

function calc_total_amount(n_nights: integer; rate: real): real;
begin
  if (VarIsNull(n_nights)) or (VarIsNull(rate)) then
    Result := 0.0
  else
    Result := n_nights * rate;
end;

function calc_nights(checkIn: TDate; checkOut: TDate): Extended;
begin
  if checkIn >= checkOut then
    Result := 0
  else if VarIsNull(checkIn) or VarIsNull(checkOut) then
    Result := 0
  else
    Result := checkOut - checkIn;
end;

procedure TfrmBooking.Button1Click(Sender: TObject);
begin
  // with dm.dsBookings do
  // begin
  // Open;
  // Insert;
  // FieldByName('checkin_date').Value := StrToDate('15-Oct-2024');
  // FieldByName('checkout_date').Value := StrToDate('17-Oct-2024');
  // FieldByName('nights').Value := 2;
  // FieldByName('room_id').Value := 2;
  // FieldByName('rate_per_night').Value := 25.0;
  // FieldByName('total_amount').Value := 50.0;
  // FieldByName('settled_amount').Value := 50.0;
  // Post;

  begin
    dm.cmdBookings.commandText.Text := 'Insert Into sandbox.bookings (checkin_date,checkout_date,nights,room_id,rate_per_night,total_amount,settled_amount) ';
    dm.cmdBookings.commandText.Text := dm.cmdBookings.commandText.Text + 'Values (''2024-10-15'', ''2024-10-17'', 2, 2, 25.0, 50.0, 50.1);';
    dm.cmdBookings.Execute;
  end;
end;

procedure TfrmBooking.dsBookingsBeforePost(DataSet: TDataSet);
begin
  ShowMessage(dm.dsBookings.Command.SQLText);
end;

procedure TfrmBooking.DTPcheckinDateChange(Sender: TObject);
begin
  dm.dsBookings.FieldByName('checkin_date').Value := DTPcheckinDate.Date;
  edNights.Text := calc_nights(DTPcheckinDate.Date,
    DTPcheckoutDate.Date).ToString;
end;

procedure TfrmBooking.DTPcheckoutDateChange(Sender: TObject);
begin
  dm.dsBookings.FieldByName('checkout_date').Value := DTPcheckinDate.Date;
  edNights.Text := calc_nights(DTPcheckinDate.Date,
    DTPcheckoutDate.Date).ToString
end;

procedure TfrmBooking.FormClose(Sender: TObject; var Action: TCloseAction);
begin
  frmBooking := nil;
  Action := caFree;
end;

procedure TfrmBooking.FormCreate(Sender: TObject);
begin
  with dm.dsVacantRooms do
  begin
    Close;
    Open;
    while not eof do
    begin
      cmbRoomNum.Items.Add(FieldByName('room_number').Value);
      Next;
    end;
    Close;
  end;
  dm.dsBookings.Open;

end;

procedure TfrmBooking.Label4Click(Sender: TObject);
begin
  if not Assigned(frmRooms) then
    frmRooms := TfrmRooms.Create(self);
  frmRooms.Show;
end;

end.
