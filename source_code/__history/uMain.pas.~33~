unit uMain;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants,
  System.Classes, Vcl.Graphics, System.UITypes,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Vcl.ComCtrls, Vcl.ExtCtrls,
  Vcl.StdCtrls, Vcl.Buttons, Vcl.Imaging.jpeg, Vcl.DBCtrls;

type
  TfrmMain = class(TForm)
    StatusBar1: TStatusBar;
    Panel1: TPanel;
    Panel2: TPanel;
    btnExit: TBitBtn;
    btnPayments: TBitBtn;
    btnGuests: TBitBtn;
    btnBookings: TBitBtn;
    btnRooms: TBitBtn;
    btnSettings: TBitBtn;
    btnReports: TBitBtn;
    Panel3: TPanel;
    Panel4: TPanel;
    DBNavigator1: TDBNavigator;
    procedure btnRoomsClick(Sender: TObject);
    procedure btnBookingsClick(Sender: TObject);
    procedure btnExitClick(Sender: TObject);
    procedure btnPaymentsClick(Sender: TObject);
    procedure FillNavButtonsCaptions();
  private
    { Private declarations }
  public
    { Public declarations }
  end;

var
  frmMain: TfrmMain;

implementation

uses
  uRooms, uDataModule, uBookings, uPayments;

{$R *.dfm}

procedure TfrmMain.FillNavButtonsCaptions();
var
 c: integer;
begin
  with DBNavigator1 do
  begin
    for c := 0 to ControlCount -1 do
      if Controls[c].ClassName = 'TNavButton' then
      with TNavButton(Controls[c]) do
        begin
          Glyph := nil;
          Font.Style := [fsBold];
          case TNavigateBtn(c) of
            nbInsert : Caption := '              Add';
            nbDelete : Caption := '              Delete';
            nbPost   : Caption := '                Save';
            nbEdit : Caption := '              Edit';
            nbCancel : Caption := '                   Cancel';
            nbFirst : Caption := '               First';
            nbLast : Caption := '               Last';
            nbNext : Caption := '                Next';
            nbPrior : Caption := '                    Previous';
            nbRefresh : Caption := '                    Refresh';
          end;
        end;
  end;
end;


procedure TfrmMain.btnBookingsClick(Sender: TObject);
begin
  if not Assigned(frmBookings) then frmBookings := TfrmBookings.Create(self);
  frmBookings.Show;
end;

procedure TfrmMain.btnExitClick(Sender: TObject);
begin
  Application.Terminate;
end;

procedure TfrmMain.btnPaymentsClick(Sender: TObject);
begin
  if not Assigned(frmPayments) then  frmPayments := TfrmPayments.Create(self);
  frmPayments.Show;
end;

procedure TfrmMain.btnRoomsClick(Sender: TObject);
begin
  if not Assigned(frmRooms) then  frmRooms := TfrmRooms.Create(self);
  frmRooms.Show;
end;

end.
